{
  
    
        "post0": {
            "title": "Advent of Code 2021 Day 1",
            "content": "values = input() . 191 185 188 189 204 213 215 227 222 221 236 235 236 232 224 228 234 226 227 228 230 232 234 213 197 198 210 238 248 261 263 265 262 295 296 311 330 333 337 344 345 356 359 360 364 367 383 386 387 391 424 426 428 440 442 446 450 423 428 423 425 445 429 436 465 456 463 461 463 483 484 500 517 525 529 527 530 535 566 578 582 587 604 613 614 609 611 619 623 627 621 622 626 644 646 655 657 659 661 671 673 668 673 676 682 683 678 679 682 681 684 686 690 693 698 700 702 707 708 732 733 734 743 745 776 794 804 784 790 813 856 855 859 850 851 886 885 888 889 883 885 920 919 917 915 918 909 910 924 925 932 933 935 966 970 971 974 958 959 961 959 964 969 970 973 972 976 998 1009 1010 1011 1046 1047 1040 1041 1056 1062 1061 1062 1077 1078 1080 1082 1094 1096 1097 1103 1128 1125 1167 1176 1175 1173 1183 1182 1183 1188 1202 1204 1205 1206 1207 1212 1235 1236 1256 1268 1270 1276 1281 1283 1276 1287 1292 1295 1291 1297 1298 1301 1312 1316 1333 1327 1340 1338 1348 1364 1381 1382 1383 1394 1385 1388 1387 1388 1394 1398 1400 1397 1399 1401 1408 1410 1420 1421 1434 1433 1436 1456 1455 1479 1482 1483 1522 1526 1527 1542 1543 1544 1548 1557 1571 1574 1580 1579 1602 1618 1605 1608 1612 1622 1625 1626 1633 1648 1641 1643 1650 1652 1659 1678 1681 1688 1692 1702 1686 1688 1685 1684 1674 1694 1696 1695 1720 1729 1736 1762 1763 1767 1780 1789 1796 1798 1799 1800 1808 1800 1805 1848 1849 1867 1888 1902 1903 1920 1923 1926 1930 1933 1925 1906 1878 1898 1899 1930 1936 1948 1974 1983 1984 1986 1983 1984 1987 1985 1988 1992 2005 2009 2013 2025 2033 2043 2046 2030 2014 2009 2011 2013 2043 2049 2053 2065 2070 2079 2080 2090 2092 2102 2116 2138 2140 2141 2143 2149 2152 2153 2154 2170 2194 2192 2216 2231 2246 2261 2268 2269 2252 2260 2264 2274 2289 2293 2296 2297 2300 2305 2334 2329 2353 2357 2359 2364 2374 2377 2364 2365 2366 2360 2362 2360 2361 2367 2357 2362 2376 2379 2380 2381 2401 2436 2435 2439 2446 2454 2456 2459 2492 2493 2514 2519 2524 2529 2530 2535 2548 2549 2551 2548 2553 2552 2556 2563 2570 2603 2616 2617 2623 2630 2631 2641 2645 2660 2662 2663 2664 2662 2668 2673 2677 2687 2688 2699 2698 2691 2695 2696 2710 2711 2717 2722 2723 2747 2746 2754 2753 2752 2771 2773 2774 2777 2789 2790 2805 2807 2818 2817 2825 2818 2828 2833 2834 2837 2839 2854 2856 2858 2859 2863 2880 2882 2884 2887 2888 2889 2902 2911 2917 2936 2938 2940 2943 2944 2943 2947 2954 2956 2957 2959 2957 2958 2959 2956 2959 2960 2969 2974 2979 2983 2985 2986 2992 2993 2995 3025 3037 3036 3037 3038 3040 3043 3049 3058 3071 3072 3080 3083 3081 3090 3091 3070 3076 3079 3083 3084 3086 3101 3114 3106 3107 3137 3138 3139 3137 3133 3137 3102 3108 3109 3124 3130 3138 3149 3150 3160 3171 3191 3190 3200 3205 3229 3235 3237 3238 3239 3243 3244 3245 3246 3250 3265 3268 3269 3271 3279 3278 3279 3280 3281 3290 3295 3296 3300 3303 3304 3305 3308 3325 3313 3326 3327 3335 3336 3337 3335 3361 3378 3374 3378 3387 3406 3416 3418 3438 3454 3460 3475 3476 3477 3471 3476 3477 3486 3487 3500 3502 3503 3530 3531 3530 3556 3563 3564 3565 3566 3580 3587 3591 3598 3599 3612 3613 3624 3623 3631 3660 3661 3662 3668 3671 3672 3674 3683 3684 3693 3694 3700 3696 3699 3705 3706 3710 3717 3731 3734 3729 3735 3736 3739 3749 3734 3739 3742 3753 3756 3757 3775 3777 3774 3780 3785 3786 3790 3792 3796 3798 3802 3817 3818 3815 3822 3824 3849 3856 3871 3845 3847 3849 3851 3853 3884 3885 3887 3889 3891 3894 3895 3900 3918 3935 3936 3941 3945 3936 3942 3945 3942 3943 3965 3974 3976 3979 3975 3976 3980 3993 3992 3991 3999 4000 3996 4019 4028 4029 4031 4053 4054 4080 4087 4089 4088 4098 4100 4103 4104 4112 4125 4145 4148 4152 4153 4158 4162 4165 4177 4184 4203 4205 4206 4207 4211 4215 4221 4240 4247 4253 4261 4262 4265 4269 4273 4274 4258 4260 4264 4282 4299 4313 4284 4287 4289 4290 4293 4295 4297 4296 4310 4314 4313 4327 4329 4330 4328 4338 4347 4368 4371 4373 4379 4388 4392 4396 4393 4394 4393 4397 4406 4409 4410 4414 4437 4436 4428 4429 4434 4426 4427 4428 4445 4447 4467 4471 4470 4472 4485 4487 4493 4495 4491 4497 4500 4506 4507 4508 4511 4518 4519 4523 4520 4523 4540 4541 4548 4549 4550 4551 4560 4570 4586 4575 4581 4585 4586 4591 4601 4595 4597 4601 4613 4615 4617 4619 4604 4609 4610 4616 4640 4666 4676 4677 4678 4709 4704 4719 4727 4729 4730 4747 4753 4755 4768 4770 4772 4777 4781 4811 4814 4843 4844 4846 4850 4862 4863 4868 4869 4870 4871 4874 4881 4882 4878 4887 4895 4898 4910 4920 4908 4910 4909 4914 4916 4922 4914 4918 4926 4949 4952 4953 4955 4956 4959 4985 4986 4990 4992 5028 5029 5032 5030 5037 5038 5047 5053 5054 5059 5057 5059 5062 5067 5085 5086 5090 5084 5077 5078 5081 5091 5094 5096 5095 5097 5103 5118 5144 5146 5153 5160 5169 5173 5174 5175 5184 5187 5195 5196 5216 5225 5238 5239 5232 5235 5237 5242 5244 5247 5254 5262 5271 5281 5287 5288 5260 5264 5282 5295 5301 5304 5310 5295 5296 5297 5298 5303 5304 5305 5277 5278 5289 5295 5290 5297 5299 5320 5328 5341 5347 5356 5361 5364 5365 5378 5379 5377 5378 5367 5380 5381 5387 5385 5390 5391 5392 5415 5422 5423 5425 5439 5441 5448 5455 5470 5477 5482 5488 5489 5492 5501 5499 5496 5499 5533 5552 5562 5563 5565 5566 5572 5571 5581 5583 5589 5594 5593 5596 5602 5606 5629 5643 5644 5652 5673 5676 5680 5676 5681 5696 5703 5698 5718 5720 5733 5736 5741 5766 5771 5786 5787 5793 5790 5786 5804 5805 5808 5809 5816 5810 5811 5818 5829 5836 5839 5824 5839 5843 5845 5849 5853 5856 5861 5873 5894 5895 5896 5897 5898 5899 5900 5913 5917 5918 5923 5924 5934 5935 5952 5965 5963 5958 5961 5975 5988 5989 5996 5997 6008 6011 6023 6024 6033 6048 6050 6051 6049 6048 6043 6048 6051 6055 6081 6084 6087 6093 6092 6090 6078 6079 6103 6092 6094 6099 6100 6116 6123 6129 6127 6138 6139 6141 6143 6146 6147 6159 6162 6163 6177 6179 6183 6187 6188 6194 6198 6213 6237 6267 6282 6288 6292 6297 6310 6323 6325 6324 6347 6349 6350 6353 6363 6376 6384 6394 6397 6401 6402 6399 6415 6416 6421 6422 6423 6420 6445 6446 6449 6451 6457 6460 6461 6467 6468 6473 6474 6517 6522 6519 6515 6532 6533 6535 6530 6532 6522 6548 6549 6565 6568 6579 6556 6563 6565 6572 6576 6578 6601 6608 6611 6612 6626 6619 6651 6657 6658 6666 6665 6660 6682 6704 6705 6711 6708 6716 6720 6725 6727 6729 6733 6734 6737 6736 6741 6742 6743 6750 6756 6757 6758 6755 6774 6773 6774 6780 6781 6790 6791 6800 6812 6815 6817 6827 6826 6832 6833 6834 6833 6822 6825 6829 6836 6840 6846 6850 6861 6868 6869 6872 6879 6882 6884 6907 6917 6930 6924 6934 6931 6918 6924 6928 6934 6935 6936 6953 6955 6964 6987 6999 7009 7042 7048 7027 7054 7053 7072 7073 7055 7056 7057 7079 7080 7084 7095 7108 7107 7109 7111 7134 7135 7137 7138 7145 7151 7161 7172 7179 7183 7189 7188 7189 7195 7202 7236 7241 7250 7277 7295 7297 7294 7298 7297 7301 7289 7291 7276 7293 7295 7311 7318 7341 7378 7398 7408 7409 7412 7409 7413 7397 7399 7423 7424 7423 7426 7418 7414 7409 7412 7425 7426 7433 7439 7448 7462 7466 7467 7468 7477 7480 7481 7498 7499 7501 7507 7527 7535 7548 7551 7552 7555 7561 7554 7559 7560 7587 7590 7596 7620 7628 7645 7646 7652 7653 7654 7663 7670 7678 7683 7686 7687 7683 7692 7691 7687 7688 7691 7699 7698 7725 7733 7734 7736 7740 7751 7744 7724 7719 7729 7731 7746 7747 7749 7722 7725 7730 7735 7737 7738 7739 7724 7721 7724 7736 7727 7730 7731 7732 7736 7737 7768 7787 7797 7807 7815 7819 7825 7852 7856 7862 7869 7881 7882 7885 7888 7892 7889 7893 7895 7896 7901 7919 7921 7932 7933 7964 7979 7990 7991 7994 7997 8011 8005 8006 8014 8047 8049 8064 8065 8046 8047 8079 8081 8082 8083 8055 8052 8056 8063 8064 8066 8053 8067 8072 8073 8077 8079 8081 8076 8083 8086 8098 8100 8109 8107 8124 8125 8126 8127 8145 8146 8152 8175 8176 8177 8182 8193 8195 8197 8199 8203 8204 8213 8217 8237 8240 8239 8230 8237 8245 8259 8264 8272 8288 8285 8286 8300 8301 8304 8305 8327 8326 8327 8341 8343 8356 8357 8358 8367 8374 8375 8391 8392 8393 8394 8399 8405 8402 8404 8435 8444 8484 8481 8490 8492 8493 8494 8503 8506 8516 8515 8516 8504 8508 8513 8529 8542 8545 8541 8546 8549 8570 8552 8553 8581 8578 8585 8593 8596 8605 8606 8608 8616 8627 8628 8627 8639 8644 8645 8626 8633 8635 8636 8640 8645 8655 8673 8693 8694 8695 8696 8695 8714 8716 8742 8739 8735 8740 8763 8762 8771 8772 8777 8776 8787 8788 8795 8796 8777 8782 8783 8794 8800 8810 8827 8828 8833 8829 8841 8862 8865 8867 8869 8895 8899 8901 8904 8908 8909 8927 8928 8930 8931 8935 8945 8946 8950 8954 8957 8959 8949 8961 8976 8980 8986 8988 8992 9003 9008 9009 9029 9050 9051 9054 9055 9068 9054 9071 9082 9087 9089 9112 9113 9127 9126 9125 9129 9138 9140 9145 9149 9151 9179 9185 9187 9188 9189 9186 9190 9207 9208 9209 9221 9228 9252 9254 9264 9267 9276 9287 9293 9292 9260 9261 9260 9265 9266 9285 9287 9289 9290 9291 9292 9293 9295 9313 9314 9291 9282 9304 9315 9316 9317 9327 9345 9350 9352 9356 9366 9367 9400 9407 9408 9415 9418 9419 9432 9441 9442 9439 9440 9451 9455 9464 9472 9479 9481 9490 9514 9527 9546 9552 9556 9570 9582 9584 9592 9597 9602 9618 9619 9622 9639 9645 9648 9643 9647 9648 9650 9641 9665 9678 9681 9682 9683 9692 9703 9704 9702 9704 9712 9726 9731 9732 9733 9744 9745 9757 9755 9763 9764 9766 9768 9782 9780 9781 9783 9786 9803 9804 9821 9822 9840 9841 9843 9839 9840 9846 9856 9859 9863 9862 9864 9865 9866 9870 9878 9877 9894 9896 9937 9938 9943 9944 9943 9952 9962 9983 9985 9984 9992 10002 10003 10041 10040 10041 10040 10042 10029 10034 10033 10034 10052 10053 10062 10055 10056 10057 10069 10073 10067 10070 10065 10064 10069 10071 10092 10069 10070 10080 10095 10099 10100 10101 10099 10115 10116 10117 10122 10124 10129 10096 10101 10106 10099 10102 10143 10144 10145 10146 10148 10149 10150 10160 10132 10137 10177 10181 10178 10183 10189 10191 10192 10194 10203 10199 10207 10218 10223 10224 10225 10245 10239 10247 10252 10250 10254 10255 10256 10279 10280 10292 10293 10300 10310 10312 10321 10324 10326 10330 10329 10328 10329 10333 10355 10354 10349 10352 10357 10369 10386 10387 10402 10406 10407 10404 10405 10407 10408 10412 10413 10417 10420 10412 10426 10427 10424 10433 10434 10435 10456 10472 10492 10494 10508 10510 10511 10512 10513 10514 10507 10510 10511 10515 10525 10526 . values . &#39;191 185 188 189 204 213 215 227 222 221 236 235 236 232 224 228 234 226 227 228 230 232 234 213 197 198 210 238 248 261 263 265 262 295 296 311 330 333 337 344 345 356 359 360 364 367 383 386 387 391 424 426 428 440 442 446 450 423 428 423 425 445 429 436 465 456 463 461 463 483 484 500 517 525 529 527 530 535 566 578 582 587 604 613 614 609 611 619 623 627 621 622 626 644 646 655 657 659 661 671 673 668 673 676 682 683 678 679 682 681 684 686 690 693 698 700 702 707 708 732 733 734 743 745 776 794 804 784 790 813 856 855 859 850 851 886 885 888 889 883 885 920 919 917 915 918 909 910 924 925 932 933 935 966 970 971 974 958 959 961 959 964 969 970 973 972 976 998 1009 1010 1011 1046 1047 1040 1041 1056 1062 1061 1062 1077 1078 1080 1082 1094 1096 1097 1103 1128 1125 1167 1176 1175 1173 1183 1182 1183 1188 1202 1204 1205 1206 1207 1212 1235 1236 1256 1268 1270 1276 1281 1283 1276 1287 1292 1295 1291 1297 1298 1301 1312 1316 1333 1327 1340 1338 1348 1364 1381 1382 1383 1394 1385 1388 1387 1388 1394 1398 1400 1397 1399 1401 1408 1410 1420 1421 1434 1433 1436 1456 1455 1479 1482 1483 1522 1526 1527 1542 1543 1544 1548 1557 1571 1574 1580 1579 1602 1618 1605 1608 1612 1622 1625 1626 1633 1648 1641 1643 1650 1652 1659 1678 1681 1688 1692 1702 1686 1688 1685 1684 1674 1694 1696 1695 1720 1729 1736 1762 1763 1767 1780 1789 1796 1798 1799 1800 1808 1800 1805 1848 1849 1867 1888 1902 1903 1920 1923 1926 1930 1933 1925 1906 1878 1898 1899 1930 1936 1948 1974 1983 1984 1986 1983 1984 1987 1985 1988 1992 2005 2009 2013 2025 2033 2043 2046 2030 2014 2009 2011 2013 2043 2049 2053 2065 2070 2079 2080 2090 2092 2102 2116 2138 2140 2141 2143 2149 2152 2153 2154 2170 2194 2192 2216 2231 2246 2261 2268 2269 2252 2260 2264 2274 2289 2293 2296 2297 2300 2305 2334 2329 2353 2357 2359 2364 2374 2377 2364 2365 2366 2360 2362 2360 2361 2367 2357 2362 2376 2379 2380 2381 2401 2436 2435 2439 2446 2454 2456 2459 2492 2493 2514 2519 2524 2529 2530 2535 2548 2549 2551 2548 2553 2552 2556 2563 2570 2603 2616 2617 2623 2630 2631 2641 2645 2660 2662 2663 2664 2662 2668 2673 2677 2687 2688 2699 2698 2691 2695 2696 2710 2711 2717 2722 2723 2747 2746 2754 2753 2752 2771 2773 2774 2777 2789 2790 2805 2807 2818 2817 2825 2818 2828 2833 2834 2837 2839 2854 2856 2858 2859 2863 2880 2882 2884 2887 2888 2889 2902 2911 2917 2936 2938 2940 2943 2944 2943 2947 2954 2956 2957 2959 2957 2958 2959 2956 2959 2960 2969 2974 2979 2983 2985 2986 2992 2993 2995 3025 3037 3036 3037 3038 3040 3043 3049 3058 3071 3072 3080 3083 3081 3090 3091 3070 3076 3079 3083 3084 3086 3101 3114 3106 3107 3137 3138 3139 3137 3133 3137 3102 3108 3109 3124 3130 3138 3149 3150 3160 3171 3191 3190 3200 3205 3229 3235 3237 3238 3239 3243 3244 3245 3246 3250 3265 3268 3269 3271 3279 3278 3279 3280 3281 3290 3295 3296 3300 3303 3304 3305 3308 3325 3313 3326 3327 3335 3336 3337 3335 3361 3378 3374 3378 3387 3406 3416 3418 3438 3454 3460 3475 3476 3477 3471 3476 3477 3486 3487 3500 3502 3503 3530 3531 3530 3556 3563 3564 3565 3566 3580 3587 3591 3598 3599 3612 3613 3624 3623 3631 3660 3661 3662 3668 3671 3672 3674 3683 3684 3693 3694 3700 3696 3699 3705 3706 3710 3717 3731 3734 3729 3735 3736 3739 3749 3734 3739 3742 3753 3756 3757 3775 3777 3774 3780 3785 3786 3790 3792 3796 3798 3802 3817 3818 3815 3822 3824 3849 3856 3871 3845 3847 3849 3851 3853 3884 3885 3887 3889 3891 3894 3895 3900 3918 3935 3936 3941 3945 3936 3942 3945 3942 3943 3965 3974 3976 3979 3975 3976 3980 3993 3992 3991 3999 4000 3996 4019 4028 4029 4031 4053 4054 4080 4087 4089 4088 4098 4100 4103 4104 4112 4125 4145 4148 4152 4153 4158 4162 4165 4177 4184 4203 4205 4206 4207 4211 4215 4221 4240 4247 4253 4261 4262 4265 4269 4273 4274 4258 4260 4264 4282 4299 4313 4284 4287 4289 4290 4293 4295 4297 4296 4310 4314 4313 4327 4329 4330 4328 4338 4347 4368 4371 4373 4379 4388 4392 4396 4393 4394 4393 4397 4406 4409 4410 4414 4437 4436 4428 4429 4434 4426 4427 4428 4445 4447 4467 4471 4470 4472 4485 4487 4493 4495 4491 4497 4500 4506 4507 4508 4511 4518 4519 4523 4520 4523 4540 4541 4548 4549 4550 4551 4560 4570 4586 4575 4581 4585 4586 4591 4601 4595 4597 4601 4613 4615 4617 4619 4604 4609 4610 4616 4640 4666 4676 4677 4678 4709 4704 4719 4727 4729 4730 4747 4753 4755 4768 4770 4772 4777 4781 4811 4814 4843 4844 4846 4850 4862 4863 4868 4869 4870 4871 4874 4881 4882 4878 4887 4895 4898 4910 4920 4908 4910 4909 4914 4916 4922 4914 4918 4926 4949 4952 4953 4955 4956 4959 4985 4986 4990 4992 5028 5029 5032 5030 5037 5038 5047 5053 5054 5059 5057 5059 5062 5067 5085 5086 5090 5084 5077 5078 5081 5091 5094 5096 5095 5097 5103 5118 5144 5146 5153 5160 5169 5173 5174 5175 5184 5187 5195 5196 5216 5225 5238 5239 5232 5235 5237 5242 5244 5247 5254 5262 5271 5281 5287 5288 5260 5264 5282 5295 5301 5304 5310 5295 5296 5297 5298 5303 5304 5305 5277 5278 5289 5295 5290 5297 5299 5320 5328 5341 5347 5356 5361 5364 5365 5378 5379 5377 5378 5367 5380 5381 5387 5385 5390 5391 5392 5415 5422 5423 5425 5439 5441 5448 5455 5470 5477 5482 5488 5489 5492 5501 5499 5496 5499 5533 5552 5562 5563 5565 5566 5572 5571 5581 5583 5589 5594 5593 5596 5602 5606 5629 5643 5644 5652 5673 5676 5680 5676 5681 5696 5703 5698 5718 5720 5733 5736 5741 5766 5771 5786 5787 5793 5790 5786 5804 5805 5808 5809 5816 5810 5811 5818 5829 5836 5839 5824 5839 5843 5845 5849 5853 5856 5861 5873 5894 5895 5896 5897 5898 5899 5900 5913 5917 5918 5923 5924 5934 5935 5952 5965 5963 5958 5961 5975 5988 5989 5996 5997 6008 6011 6023 6024 6033 6048 6050 6051 6049 6048 6043 6048 6051 6055 6081 6084 6087 6093 6092 6090 6078 6079 6103 6092 6094 6099 6100 6116 6123 6129 6127 6138 6139 6141 6143 6146 6147 6159 6162 6163 6177 6179 6183 6187 6188 6194 6198 6213 6237 6267 6282 6288 6292 6297 6310 6323 6325 6324 6347 6349 6350 6353 6363 6376 6384 6394 6397 6401 6402 6399 6415 6416 6421 6422 6423 6420 6445 6446 6449 6451 6457 6460 6461 6467 6468 6473 6474 6517 6522 6519 6515 6532 6533 6535 6530 6532 6522 6548 6549 6565 6568 6579 6556 6563 6565 6572 6576 6578 6601 6608 6611 6612 6626 6619 6651 6657 6658 6666 6665 6660 6682 6704 6705 6711 6708 6716 6720 6725 6727 6729 6733 6734 6737 6736 6741 6742 6743 6750 6756 6757 6758 6755 6774 6773 6774 6780 6781 6790 6791 6800 6812 6815 6817 6827 6826 6832 6833 6834 6833 6822 6825 6829 6836 6840 6846 6850 6861 6868 6869 6872 6879 6882 6884 6907 6917 6930 6924 6934 6931 6918 6924 6928 6934 6935 6936 6953 6955 6964 6987 6999 7009 7042 7048 7027 7054 7053 7072 7073 7055 7056 7057 7079 7080 7084 7095 7108 7107 7109 7111 7134 7135 7137 7138 7145 7151 7161 7172 7179 7183 7189 7188 7189 7195 7202 7236 7241 7250 7277 7295 7297 7294 7298 7297 7301 7289 7291 7276 7293 7295 7311 7318 7341 7378 7398 7408 7409 7412 7409 7413 7397 7399 7423 7424 7423 7426 7418 7414 7409 7412 7425 7426 7433 7439 7448 7462 7466 7467 7468 7477 7480 7481 7498 7499 7501 7507 7527 7535 7548 7551 7552 7555 7561 7554 7559 7560 7587 7590 7596 7620 7628 7645 7646 7652 7653 7654 7663 7670 7678 7683 7686 7687 7683 7692 7691 7687 7688 7691 7699 7698 7725 7733 7734 7736 7740 7751 7744 7724 7719 7729 7731 7746 7747 7749 7722 7725 7730 7735 7737 7738 7739 7724 7721 7724 7736 7727 7730 7731 7732 7736 7737 7768 7787 7797 7807 7815 7819 7825 7852 7856 7862 7869 7881 7882 7885 7888 7892 7889 7893 7895 7896 7901 7919 7921 7932 7933 7964 7979 7990 7991 7994 7997 8011 8005 8006 8014 8047 8049 8064 8065 8046 8047 8079 8081 8082 8083 8055 8052 8056 8063 8064 8066 8053 8067 8072 8073 8077 8079 8081 8076 8083 8086 8098 8100 8109 8107 8124 8125 8126 8127 8145 8146 8152 8175 8176 8177 8182 8193 8195 8197 8199 8203 8204 8213 8217 8237 8240 8239 8230 8237 8245 8259 8264 8272 8288 8285 8286 8300 8301 8304 8305 8327 8326 8327 8341 8343 8356 8357 8358 8367 8374 8375 8391 8392 8393 8394 8399 8405 8402 8404 8435 8444 8484 8481 8490 8492 8493 8494 8503 8506 8516 8515 8516 8504 8508 8513 8529 8542 8545 8541 8546 8549 8570 8552 8553 8581 8578 8585 8593 8596 8605 8606 8608 8616 8627 8628 8627 8639 8644 8645 8626 8633 8635 8636 8640 8645 8655 8673 8693 8694 8695 8696 8695 8714 8716 8742 8739 8735 8740 8763 8762 8771 8772 8777 8776 8787 8788 8795 8796 8777 8782 8783 8794 8800 8810 8827 8828 8833 8829 8841 8862 8865 8867 8869 8895 8899 8901 8904 8908 8909 8927 8928 8930 8931 8935 8945 8946 8950 8954 8957 8959 8949 8961 8976 8980 8986 8988 8992 9003 9008 9009 9029 9050 9051 9054 9055 9068 9054 9071 9082 9087 9089 9112 9113 9127 9126 9125 9129 9138 9140 9145 9149 9151 9179 9185 9187 9188 9189 9186 9190 9207 9208 9209 9221 9228 9252 9254 9264 9267 9276 9287 9293 9292 9260 9261 9260 9265 9266 9285 9287 9289 9290 9291 9292 9293 9295 9313 9314 9291 9282 9304 9315 9316 9317 9327 9345 9350 9352 9356 9366 9367 9400 9407 9408 9415 9418 9419 9432 9441 9442 9439 9440 9451 9455 9464 9472 9479 9481 9490 9514 9527 9546 9552 9556 9570 9582 9584 9592 9597 9602 9618 9619 9622 9639 9645 9648 9643 9647 9648 9650 9641 9665 9678 9681 9682 9683 9692 9703 9704 9702 9704 9712 9726 9731 9732 9733 9744 9745 9757 9755 9763 9764 9766 9768 9782 9780 9781 9783 9786 9803 9804 9821 9822 9840 9841 9843 9839 9840 9846 9856 9859 9863 9862 9864 9865 9866 9870 9878 9877 9894 9896 9937 9938 9943 9944 9943 9952 9962 9983 9985 9984 9992 10002 10003 10041 10040 10041 10040 10042 10029 10034 10033 10034 10052 10053 10062 10055 10056 10057 10069 10073 10067 10070 10065 10064 10069 10071 10092 10069 10070 10080 10095 10099 10100 10101 10099 10115 10116 10117 10122 10124 10129 10096 10101 10106 10099 10102 10143 10144 10145 10146 10148 10149 10150 10160 10132 10137 10177 10181 10178 10183 10189 10191 10192 10194 10203 10199 10207 10218 10223 10224 10225 10245 10239 10247 10252 10250 10254 10255 10256 10279 10280 10292 10293 10300 10310 10312 10321 10324 10326 10330 10329 10328 10329 10333 10355 10354 10349 10352 10357 10369 10386 10387 10402 10406 10407 10404 10405 10407 10408 10412 10413 10417 10420 10412 10426 10427 10424 10433 10434 10435 10456 10472 10492 10494 10508 10510 10511 10512 10513 10514 10507 10510 10511 10515 10525 10526&#39; . len(values) . 9966 . Let&#39;s turn this long string into a list of values. Will print out the first ten entries in the list just as a sanity check. . values_lst = values.split(&#39; &#39;) print(values_lst[:10]) . [&#39;191&#39;, &#39;185&#39;, &#39;188&#39;, &#39;189&#39;, &#39;204&#39;, &#39;213&#39;, &#39;215&#39;, &#39;227&#39;, &#39;222&#39;, &#39;221&#39;] . print(values_lst[-1]) . 10526 . Now for the actual solution. I&#39;ll iterate through each value in the list and starting with the second one I&#39;ll check if it&#39;s bigger than the preceding one. If so, then there has been an increase in value. Each occurence of an increase will be stored in the counter variable and is the answer. . counter = 0 for i in range(1, len(values_lst)): if int(values_lst[i]) &gt; int(values_lst[i-1]): counter += 1 print(counter) . 1709 . Part 2: Comparing sums of sliding windows . For this second part we&#39;re working with the same set of numbers as in part 1, so I&#39;ll be reusing values_lst. This time we&#39;ll be comparing the sums of a sliding window of three values and counting the number of times a sum is greater than the preceding one. . i = 0 counter = 0 previous_sum = None while i &lt;= len(values_lst): current_sum = sum([int(number) for number in values_lst[i:i+3]]) if previous_sum is None: previous_sum = current_sum else: if previous_sum &lt; current_sum: counter += 1 previous_sum = current_sum i += 1 print(counter) . 1761 .",
            "url": "https://cmondorf.github.io/blog/2021/11/30/_12_1_Advent_of_Code_day_1.html",
            "relUrl": "/2021/11/30/_12_1_Advent_of_Code_day_1.html",
            "date": " • Nov 30, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Thoughts on Lesson 0 - How to fastai",
            "content": "Recently, a new lesson was added to the fast.ai course. This lesson wasn’t added to the end of the lessons already posted, but instead is meant to be seen before the current set of published lessons. In this post I highlight a few key points that struck me as particularly important and noteworthy. . 1. Teach the whole game . Fast.ai is many things. It’s a library that runs on top of Pytorch and makes it much easier to work with, it’s a book on deep learning, a course, and even an approach to learning and teaching. What makes it special is that the people behind the course have put a lot of thought into their teaching methodology and have an explicit goal of breaking down barriers and making deep learning accessible. . What sets this course apart from other more traditional courses is that it embraces a top-down approach to teaching. This philosophy was pionered by David Perkins, a professor of education at Harvard. He lays out his approach to teaching here: . . The main idea is that you should teach “the whole game”. He describes the example of teaching baseball. You don’t initially teach people about aerodynamics, the physics of acceleration and friction which act on the ball, the psychology of team sports, the architecture of fields, etc. Instead you explain enough for them to start playing. Then, with practice they iteratively improve over time. . Perkins has distilled his approach to teaching through the following 7 principles: . Play the whole game. You may need to start with junior versions. You learn to ride a bicycle by actually riding a bicycle, but maybe don’t start on the Tour de France. | Make the game worth playing. Excitement and curiousity can be powerful allies on the journey to learn something. | Work on the hard parts. He talks about “zooming into the challenging bits”. This can help you perfect some technique or practice an essential move. | Play out of town. Transfer is a tricky part of the learning game. I once read about a study of street children in Brazil who were able to perform complex computations in their head, but were totally unable to apply math skills in any other domain. Being able to take your skills with you is the mark of truely having internalized them. | Reveal the hidden game. In the case of baseball this would be strategy. I’m guessing in other domains this would be things like implicit knowledge. In learning theory explicit knowledge is what is written down in textbooks (chemical proceedures, for example) and implicit knowledge is stuff that isn’t written anywhere but is important (such as lab etiquette, perhaps). | Learn from the team. Make it social. As the saying goes “if you want to go fast, go alone, but if you want to go far go together.” | Learn the game of learning. This is important. We ignore metacognition at our peril. You see this all the time with language learning apps and courses that can’t possibly teach anyone a language. Often what sells these courses is the illusion of learning as opposed to actual results. | 2. Finish the damn course, and build things from the very beginning . Here, Jeremy Howard mentions Radek Osmulski as an example both of what not to do, and what to do. Basically, we should avoid Radek’s initial approach which was to try to learn all the basics and fundamentals before building anything, and learn from his successful second run where he put building and coding front and center. By his own estimate, the winning fomula is 60% doing, 40% learning. Radek has written an entire book about what he learned about learning fast.ai and deep learning generally. I’ve read the book and will write a review of it soon, so I won’t go further into it here. . The main point to take home here is that, as Jeremy puts it “reading books and watching tutorials won’t get you there.” You’ll learn by doing, in the same way you won’t learn to ride a bike by reading about how to ride a bike. You’ll learn by getting on the bike (and falling!). . 3. Address things that you’re missing . Here again Jeremy quotes Radek. Radek has written that mastering DL relies on a four-legged table. The legs of the table are: . code concepts | mastering an IDE | mastering Git and GitHub | learning about ssh and linux to be able to use remote servers | Of course, this raises the question of how to learn these things. A good place to start seems to be The Missing Semester. This is an MIT course that is available on youtube that covers these missing topics. I haven’t worked through this course but intend to and will write a review when I’ve finished it. . 5. How to go through a fast.ai lesson . Both Jeremy and Radek mention four steps to go through when approaching a fast.ai lesson: . watch the lecture | run the notebook, experiment! | reproduce results | repeat with a different dataset | This time around I haven’t been watching the lectures, though I intend to pick them up again. Instead, I’ve been participating in Weight’s and Biases’ reading group. This has been a great experience as there’s a great social component there (the team Perkins talks about). . However, I’ve been reading the book and then using the notebooks that correspond to each chapter. The nice thing is the entire book is available on github as runnable notebooks. Not only that, but they’re there in two versions. One is the book as it’s published, but the other is a set of ‘clean’ notebooks, that is to say notebooks with the code but no prose. Running the latter while reminding myself of the content of the prose is a great way to review. . Another important piece of advice Jeremy gives is that when approaching a project generally, not just those mentioned in the book and course, you should aim to build a very basic end to end process that builds or processes a dataset, prepares the data, trains a model and makes inferences. This first iteration will probably not be very good, but it will allow you to solve challenges linked to setting up the end to end pipeline. With that ready it’s much easier to iterate and gradually improve. . I’ve been building my own versions of the sample projects there, in effect steps 3 and 4, trying to increasingly step away from the examples and either build from what I remember or searching documentation or forums as appropriate. I intend to publish about those results here as they become available. . Concluding remarks . The rest of lesson 0 is mostly about how to run notebooks. Jeremy focuses on AWS and Google Colab as two easy ways to run fastbook’s notebooks. This is useful how-to that allows you to get set up and running code, but I won’t be covering it in this post as I wanted to focus here on the advice he was giving about how to learn fastai. . I’m really excited about this course and about the reading group set up by Weights and Biases, and not only because of the topics we’re covering but also to see an example to this top-down learning approach in action. .",
            "url": "https://cmondorf.github.io/blog/2021/06/01/lesson-0-fastai.html",
            "relUrl": "/2021/06/01/lesson-0-fastai.html",
            "date": " • Jun 1, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "You've learned the syntax, now level up your coding",
            "content": "So you’ve read a few books, followed a few tutorials, maybe attended a bootcamp. By now you should know the syntax pretty well, but to be able to work comfortably with a language or pass technical interviews you will need to build fluency in it. This is not unlike building virtuosity on a musical instrument, except in this case rather than practicing pieces of music you hack away at coding exercises. . I list a few good places to go for such exercises on How to build fluency in a programming language, a new post up on my Medium account. .",
            "url": "https://cmondorf.github.io/blog/2018/05/28/level-up-coding-skills.html",
            "relUrl": "/2018/05/28/level-up-coding-skills.html",
            "date": " • May 28, 2018"
        }
        
    
  
    
        ,"post3": {
            "title": "Can artificial intelligence rescue threatened languages?",
            "content": "Will AI and machine translation kill off the drive to learn foreign languages, or will it help save them? . New post up on FlowingTensors. .",
            "url": "https://cmondorf.github.io/blog/2018/03/14/can-AI-rescue-threatened-languages.html",
            "relUrl": "/2018/03/14/can-AI-rescue-threatened-languages.html",
            "date": " • Mar 14, 2018"
        }
        
    
  
    
        ,"post4": {
            "title": "Self-driving cars aren't cars",
            "content": "It’s hard to know what self-driving cars will be like, but they won’t be cars. The fact that we can only refer to them as such when discussing them says more about how heavily their legacy weighs on our psyche than it does about them. That’s the point I made in a brief Medium post last year. .",
            "url": "https://cmondorf.github.io/blog/2018/03/08/self-driving-cars-arent-cars.html",
            "relUrl": "/2018/03/08/self-driving-cars-arent-cars.html",
            "date": " • Mar 8, 2018"
        }
        
    
  
    
        ,"post5": {
            "title": "We need to discuss frustration in learning to code",
            "content": "I’ve recently published a post on Medium about a topic I think doesn’t get the attention it deserves: frustration when learning to code. . A number of bootcamps, online courses and books do a good job of whipping up enthusiasm for how it’s possible to transition into code from another background and how all you need is a computer and some time. What they fail to emphasize is how critical endurance and an ability to persist in the face of difficult problems is. .",
            "url": "https://cmondorf.github.io/blog/2018/03/05/frustration-learning-to-code.html",
            "relUrl": "/2018/03/05/frustration-learning-to-code.html",
            "date": " • Mar 5, 2018"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I come from a supply chain background but spend most of my time now helping people and machines learn from data. I’ve used Ruby and R but these days mostly Python. . I’ve worked on four continents, mostly at the intersection between training/knowledge management, IT and supply chain management in both the private and humanitarian sectors. . Languages are a source of endless fascination for me. I speak five of them fluently and learning Mandarin currently helps keep me busy. . I enjoy working as part of multidisciplinary teams. . I founded and used to run the Hamburg R user group. .",
          "url": "https://cmondorf.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://cmondorf.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}